"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3731],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=o.createContext({}),l=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=l(e.components);return o.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=l(t),d=a,h=m["".concat(p,".").concat(d)]||m[d]||s[d]||r;return t?o.createElement(h,c(c({ref:n},u),{},{components:t})):o.createElement(h,c({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,c=new Array(r);c[0]=m;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<r;l++)c[l]=t[l];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},410:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>s,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var o=t(7462),a=(t(7294),t(3905));const r={sidebar_position:5,id:"functional-component-and-props",title:"Functional Component and Props",description:"Functional Component and Props",slug:"functional-component-and-props"},c=void 0,i={unversionedId:"react/functional-component-and-props",id:"react/functional-component-and-props",title:"Functional Component and Props",description:"Functional Component and Props",source:"@site/docs/2.-react/5.-Function-Component-and-Props.md",sourceDirName:"2.-react",slug:"/react/functional-component-and-props",permalink:"/docs/react/functional-component-and-props",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/2.-react/5.-Function-Component-and-Props.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,id:"functional-component-and-props",title:"Functional Component and Props",description:"Functional Component and Props",slug:"functional-component-and-props"},sidebar:"tutorialSidebar",previous:{title:"Introduction to React JS",permalink:"/docs/react/intro-to-react-js"},next:{title:"Form and Table",permalink:"/docs/react/form-and-table"}},p={},l=[{value:"What is Component in React?",id:"what-is-component-in-react",level:2},{value:"Why use components?",id:"why-use-components",level:2},{value:"How to create a function component?",id:"how-to-create-a-function-component",level:2},{value:"Example",id:"example",level:2},{value:"CounterText",id:"countertext",level:3},{value:"IncrementButton",id:"incrementbutton",level:3},{value:"DecrementButton",id:"decrementbutton",level:3},{value:"ChangesByAmount",id:"changesbyamount",level:3},{value:"App",id:"app",level:3},{value:"Code",id:"code",level:2}],u={toc:l};function s(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"what-is-component-in-react"},"What is Component in React?"),(0,a.kt)("p",null,"Components are independent and reusable bits of code. They serve the same purpose as JavaScript functions, but work in isolation and return HTML."),(0,a.kt)("p",null,"Components come in two types, Class components and Function components, in this we will concentrate on Function components."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"In older React code bases, you may find Class components primarily used. It is now suggested to use Function components along with Hooks, which were added in React 16.8. There is an optional section on Class components for your reference.")),(0,a.kt)("p",null,"Function components are the simplest type of component. They are functions that return some HTML."),(0,a.kt)("h2",{id:"why-use-components"},"Why use components?"),(0,a.kt)("p",null,"Components let you split the UI into independent, reusable pieces, and think about each piece in isolation. Conceptually, components are like JavaScript functions. They accept arbitrary inputs (called \u201cprops\u201d) and return React elements describing what should appear on the screen."),(0,a.kt)("h2",{id:"how-to-create-a-function-component"},"How to create a function component?"),(0,a.kt)("p",null,"As you can see below, function components are very simple. They accept props as arguments and return some HTML."),(0,a.kt)("p",null,"Here is a simple function component named MyComponent that returns ",(0,a.kt)("inlineCode",{parentName:"p"},"<div>")," with some text inside it that is passed as a prop:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function MyComponent(props) {\n  return <div>{props.message}</div>;\n}\n")),(0,a.kt)("p",null,"Now we can use this component in our application:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import MyComponent from \'./MyComponent\';\n\nfunction App() {\n  return <>\n    <MyComponent message="Hello World!" />\n    <MyComponent message="Goodbye World!" />\n  </>;\n}\n')),(0,a.kt)("p",null,'Here we are using the component MyComponent to render two instances of it. The first one has a message property set to "Hello World!", and the second one has a message property set to "Goodbye World!". The component MyComponent is defined in the file MyComponent.jsx. We can use the component in our application by importing it and using it in our App component. '),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: We can also pass functions, array, object as props to components.")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"I am going to make a counter app using components. I will use those components in the App component."),(0,a.kt)("p",null,"These are the components that I will create:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"CounterText")," - This component will display the current count."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"IncrementButton")," - This component will increment the count."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"DecrementButton")," - This component will decrement the count."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"ChangeByAmount")," - This component will change the count by a specified amount, using text input, and a button to submit the change.")),(0,a.kt)("p",null,"In the App component, I will use these components. I will also use the ",(0,a.kt)("inlineCode",{parentName:"p"},"useState")," hook to keep track of the count. I will create functions to handle the increment, decrement, and change by amount in ",(0,a.kt)("inlineCode",{parentName:"p"},"App")," component."),(0,a.kt)("p",null,"First of all, let's create the components."),(0,a.kt)("h3",{id:"countertext"},"CounterText"),(0,a.kt)("p",null,"This component will display the current count."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function CounterText({ count }) {\n  return <text>{count}</text>;\n}\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: I can name arguments anything generally developers name as the prop ",(0,a.kt)("inlineCode",{parentName:"p"},"CounterText(prop)"),". We can also do Object destructuring to get the props from props object. Like this: ",(0,a.kt)("inlineCode",{parentName:"p"},"CounterText({ count })"),", and then we can use ",(0,a.kt)("inlineCode",{parentName:"p"},"count")," in the component, like this: ",(0,a.kt)("inlineCode",{parentName:"p"},"<text>{count}</text>"),". Instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"<text>{props.count}</text>"),". If you don't know Object destructuring, you can learn more about it ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"},"here")," or Google it.")),(0,a.kt)("h3",{id:"incrementbutton"},"IncrementButton"),(0,a.kt)("p",null,"This component will increment the count."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function IncrementButton({ handleClick }) {\n  return <button onClick={handleClick}>+</button>;\n}\n")),(0,a.kt)("h3",{id:"decrementbutton"},"DecrementButton"),(0,a.kt)("p",null,"This component will decrement the count."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function DecrementButton({ handleClick }) {\n  return <button onClick={handleClick}>-</button>;\n}\n")),(0,a.kt)("h3",{id:"changesbyamount"},"ChangesByAmount"),(0,a.kt)("p",null,"This component will change the count by a specified amount, using text input, and a button to submit the change."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'export default function ChangesByAmount({ handleClick }) {\n  return (\n    <form onSubmit={handleClick}>\n      <input type="number" name="number" placeholder="Change by Amount" />\n      <button type="submit">Change by amount</button>\n    </form>\n  );\n}\n')),(0,a.kt)("h3",{id:"app"},"App"),(0,a.kt)("p",null,"This component will use the components above to display the counter."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import React from "react";\nimport CounterText from "./components/counterText";\nimport DecrementButton from "./components/decrementButton";\nimport IncrementButton from "./components/incrementButton";\nimport ChangesByAmount from "./components/changesByAmount";\n\nexport default function App() {\n  // Declare a new state variable. I will pass as prop to the CounterText.\n  const [count, setCount] = React.useState(0);\n\n  // I will pass this function to the `IncrementButton` component as a prop.\n  const handleDecrementButtonClick = () => {\n    setCount(count - 1);\n  };\n\n  // I will pass this function to the `DecrementButton` component as a prop.\n  const handleIncrementButtonClick = () => {\n    setCount(count + 1);\n  };\n\n  // I will pass this function to the `ChangeByAmount` component as a prop.\n  const handleChangeByAmountButtonClick = (event) => {\n    // prevent the default behavior of the form submit event, which is to refresh the page.\n    event.preventDefault();\n    // checking if the input is a number\n    const amount = parseInt(event.target.number.value);\n    if (!isNaN(amount)) {\n      setCount(count + amount);\n    }\n    // resetting the input field\n    event.target.number.value = "";\n  };\n\n  return (\n    <div>\n      <DecrementButton handleClick={handleDecrementButtonClick} />\n      <CounterText count={count} />\n      <IncrementButton handleClick={handleIncrementButtonClick} />\n      <ChangesByAmount handleClick={handleChangeByAmountButtonClick} />\n    </div>\n  );\n}\n')),(0,a.kt)("h2",{id:"code"},"Code"),(0,a.kt)("p",null,"You can get the code for this tutorial ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mrizwanashiq/learning-react-js/tree/example/function-component-and-prop"},"here")))}s.isMDXComponent=!0}}]);